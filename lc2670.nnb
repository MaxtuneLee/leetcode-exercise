{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# 2670. 找出不同元素数目差数组\r\n给你一个下标从 0 开始的数组 nums ，数组长度为 n 。\r\n\r\nnums 的 不同元素数目差 数组可以用一个长度为 n 的数组 diff 表示，其中 diff[i] 等于前缀 nums[0, ..., i] 中不同元素的数目 减去 后缀 nums[i + 1, ..., n - 1] 中不同元素的数目。\r\n\r\n返回 nums 的 不同元素数目差 数组。\r\n\r\n注意 nums[i, ..., j] 表示 nums 的一个从下标 i 开始到下标 j 结束的子数组（包含下标 i 和 j 对应元素）。特别需要说明的是，如果 i > j ，则 nums[i, ..., j] 表示一个空子数组。"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "function distinctDifferenceArray(nums: number[]): number[] {\r\n    let diff: number[] = []\r\n    nums.forEach((value, index) => {\r\n        let beforeCount = 0\r\n        let afterCount = 0\r\n        let beforeSlice = nums.slice(0, index + 1)\r\n        let afterSlice = nums.slice(index + 1, nums.length)\r\n        beforeSlice = beforeSlice.sort()\r\n        afterSlice = afterSlice.sort()\r\n        let mem: null | number = null\r\n        beforeSlice.forEach((value, index) => {\r\n            if (beforeSlice.length === 1) {\r\n                beforeCount++\r\n                return\r\n            }\r\n            value !== mem && beforeCount++\r\n            mem = value\r\n        })\r\n        mem = null\r\n        afterSlice.forEach((value, index) => {\r\n            if (afterSlice.length === 1) {\r\n                afterCount++\r\n                return\r\n            }\r\n            value !== mem && afterCount++\r\n            mem = value\r\n        })\r\n        diff.push(beforeCount - afterCount)\r\n    })\r\n    return diff\r\n};\r\n\r\nlet result = distinctDifferenceArray([3, 2, 3, 4, 2])"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "这边其实主要就是一个查重，我一开始的想法是先给两个数组排序，然后再查重会更加方便快捷，但是其实有更加好的方法\r\njs 中有 `Set` 对象，在 mdn 上是这样描述的 The Set object lets you store unique values of any type\r\n所以说，我们可以将一个 `Array` 转成 `Set` 再数它里面对象的个数，就可以知道数组里面有多少个不一样的元素了。"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "function distinctDifferenceArray2(nums: number[]): number[] {\r\n    let diff: number[] = []\r\n    for (let i = 0; i < nums.length; i++) {\r\n        diff.push(new Set(nums.slice(0, i + 1)).size - new Set(nums.slice(i + 1)).size)\r\n    }\r\n    return diff\r\n};"
            ],
            "outputs": []
        }
    ]
}